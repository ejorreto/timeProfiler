/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTIMEPROFILER_CLOCK_H
#define _MOCKTIMEPROFILER_CLOCK_H

#include "unity.h"
#include "timeProfiler_clock.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void MocktimeProfiler_clock_Init(void);
void MocktimeProfiler_clock_Destroy(void);
void MocktimeProfiler_clock_Verify(void);




#define tProfReadClock_IgnoreAndReturn(cmock_retval) tProfReadClock_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void tProfReadClock_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define tProfReadClock_StopIgnore() tProfReadClock_CMockStopIgnore()
void tProfReadClock_CMockStopIgnore(void);
#define tProfReadClock_ExpectAndReturn(cmock_retval) tProfReadClock_CMockExpectAndReturn(__LINE__, cmock_retval)
void tProfReadClock_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_tProfReadClock_CALLBACK)(int cmock_num_calls);
void tProfReadClock_AddCallback(CMOCK_tProfReadClock_CALLBACK Callback);
void tProfReadClock_Stub(CMOCK_tProfReadClock_CALLBACK Callback);
#define tProfReadClock_StubWithCallback tProfReadClock_Stub

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
